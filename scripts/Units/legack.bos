#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SIG_BUILD 4	
#define BASEPIECE pelvis
#define MOVESCALE 5
#define SIGNAL_MOVE 1

piece pelvis, aimy1, torso, shell, arm, nanogun, cagelight, cagelight_emit, nano, 
leg1_FR, leg2_FR, foot_FR,
leg1_FL, leg2_FL, foot_FL,
leg1_BR, leg2_BR, foot_BR,
leg1_BL, leg2_BL, foot_BL;

static-var  isMoving, notBuilding, nanoNozzle,  statechg_DesiredState, statechg_StateChanging, animSpeed, maxSpeed, animFramesPerKeyframe, isMoving;
            
// this animation uses the static-var animFramesPerKeyframe which contains how many frames each keyframe takes
Walk() {// For C:\Users\logst\Downloads\BAR\LegAdvBotFab.blend1 Created by https://github.com/Beherith/Skeletor_S3O V((0, 4, 2)) 
	set-signal-mask SIGNAL_MOVE;
	while(isMoving) {
		if (isMoving) { //Frame:4
			turn foot_BL to z-axis <30.492461> speed <216.529564> / animSpeed; 
			turn foot_BR to z-axis <-53.132294> speed <967.991109> / animSpeed; 
			turn foot_FL to z-axis <45.105275> speed <249.689142> / animSpeed; 
			turn foot_FR to z-axis <-29.438576> speed <250.955920> / animSpeed; 
			turn leg1_BL to z-axis <47.900619> speed <57.296442> / animSpeed; 
			turn leg1_BL to y-axis <33.108072> speed <380.818427> / animSpeed; 
			turn leg1_BR to z-axis <-34.084365> speed <571.527775> / animSpeed; 
			turn leg1_BR to y-axis <-55.138123> speed <232.987588> / animSpeed; 
			turn leg1_FL to z-axis <28.701882> speed <358.301957> / animSpeed; 
			turn leg1_FL to y-axis <-38.326562> speed <670.201077> / animSpeed; 
			turn leg1_FR to z-axis <-46.732697> speed <403.786714> / animSpeed; 
			turn leg1_FR to y-axis <56.611695> speed <188.854184> / animSpeed; 
			turn leg2_BL to z-axis <-78.345487> speed <269.624313> / animSpeed; 
			turn leg2_BR to z-axis <87.215532> speed <1536.882312> / animSpeed; 
			turn leg2_FL to z-axis <-73.806027> speed <606.731441> / animSpeed; 
			turn leg2_FR to z-axis <76.127840> speed <654.732850> / animSpeed; 
			move pelvis to x-axis [1.188236] speed [16.069225] / animSpeed; 
			move pelvis to z-axis [-0.332076] speed [36.420221] / animSpeed; 
			move pelvis to y-axis [0.446760] speed [14.233704] / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:8
			turn foot_BL to z-axis <26.310985> speed <125.444279> / animSpeed; 
			turn foot_BR to z-axis <-60.839569> speed <231.218228> / animSpeed; 
			turn foot_FL to z-axis <27.176174> speed <537.873043> / animSpeed; 
			turn foot_FR to z-axis <-31.159774> speed <51.635923> / animSpeed; 
			turn leg1_BL to z-axis <46.679685> speed <36.628016> / animSpeed; 
			turn leg1_BL to y-axis <46.471221> speed <400.894470> / animSpeed; 
			turn leg1_BR to z-axis <-43.245544> speed <274.835372> / animSpeed; 
			turn leg1_BR to y-axis <-34.474547> speed <619.907286> / animSpeed; 
			turn leg1_FL to z-axis <18.715056> speed <299.604779> / animSpeed; 
			turn leg1_FL to y-axis <-54.163540> speed <475.109359> / animSpeed; 
			turn leg1_FR to z-axis <-52.412901> speed <170.406116> / animSpeed; 
			turn leg1_FR to y-axis <43.337892> speed <398.214099> / animSpeed; 
			turn leg2_BL to z-axis <-72.989901> speed <160.667564> / animSpeed; 
			turn leg2_BR to z-axis <104.079877> speed <505.930348> / animSpeed; 
			turn leg2_FL to z-axis <-45.889678> speed <837.490475> / animSpeed; 
			turn leg2_FR to z-axis <83.571463> speed <223.308664> / animSpeed; 
			move pelvis to x-axis [-0.129200] speed [39.523083] / animSpeed; 
			move pelvis to z-axis [-1.160446] speed [24.851103] / animSpeed; 
			move pelvis to y-axis [0.710300] speed [7.906208] / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:12
			turn foot_BL to z-axis <13.058380> speed <397.578148> / animSpeed; 
			turn foot_BR to z-axis <-52.881500> speed <238.742057> / animSpeed; 
			turn foot_FL to z-axis <10.801658> speed <491.235461> / animSpeed; 
			turn foot_FR to z-axis <-38.001632> speed <205.255756> / animSpeed; 
			turn leg1_BL to z-axis <29.583291> speed <512.891814> / animSpeed; 
			turn leg1_BL to y-axis <61.499310> speed <450.842687> / animSpeed; 
			turn leg1_BR to z-axis <-47.271439> speed <120.776835> / animSpeed; 
			turn leg1_BR to y-axis <-16.209045> speed <547.965057> / animSpeed; 
			turn leg1_FL to z-axis <11.780457> speed <208.037991> / animSpeed; 
			turn leg1_FL to y-axis <-62.724120> speed <256.817401> / animSpeed; 
			turn leg1_FR to z-axis <-55.708952> speed <98.881537> / animSpeed; 
			turn leg1_FR to y-axis <18.020477> speed <759.522432> / animSpeed; 
			turn leg2_BL to z-axis <-42.614073> speed <911.274857> / animSpeed; 
			turn leg2_BR to z-axis <100.063023> speed <120.505642> / animSpeed; 
			turn leg2_FL to z-axis <-22.580245> speed <699.282981> / animSpeed; 
			turn leg2_FR to z-axis <93.392988> speed <294.645755> / animSpeed; 
			move pelvis to x-axis [-1.319649] speed [35.713462] / animSpeed; 
			move pelvis to z-axis [-0.332076] speed [24.851103] / animSpeed; 
			move pelvis to y-axis [0.446760] speed [7.906208] / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:16
			turn foot_BL to z-axis <21.138710> speed <242.409894> / animSpeed; 
			turn foot_BR to z-axis <-37.571272> speed <459.306828> / animSpeed; 
			turn foot_FL to z-axis <21.224922> speed <312.697919> / animSpeed; 
			turn foot_FR to z-axis <-53.564727> speed <466.892846> / animSpeed; 
			turn leg1_BL to z-axis <15.187783> speed <431.865246> / animSpeed; 
			turn leg1_BL to y-axis <64.309434> speed <84.303727> / animSpeed; 
			turn leg1_BR to z-axis <-50.124815> speed <85.601292> / animSpeed; 
			turn leg1_FL to z-axis <33.705098> speed <657.739251> / animSpeed; 
			turn leg1_FL to y-axis <-63.118188> speed <11.822033> / animSpeed; 
			turn leg1_FR to z-axis <-40.470732> speed <457.146610> / animSpeed; 
			turn leg1_FR to y-axis <16.037110> speed <59.501022> / animSpeed; 
			turn leg2_BL to z-axis <-36.322745> speed <188.739847> / animSpeed; 
			turn leg2_BR to z-axis <87.510228> speed <376.583846> / animSpeed; 
			turn leg2_FL to z-axis <-54.883271> speed <969.090787> / animSpeed; 
			turn leg2_FR to z-axis <93.997931> speed <18.148291> / animSpeed; 
			move pelvis to x-axis [-1.734932] speed [12.458496] / animSpeed; 
			move pelvis to z-axis [0.881931] speed [36.420221] / animSpeed; 
			move pelvis to y-axis [-0.027697] speed [14.233704] / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:20
			turn foot_BL to z-axis <49.564552> speed <852.775260> / animSpeed; 
			turn foot_BR to z-axis <-31.174851> speed <191.892628> / animSpeed; 
			turn foot_FL to z-axis <29.094810> speed <236.096622> / animSpeed; 
			turn foot_FR to z-axis <-47.739180> speed <174.766407> / animSpeed; 
			turn leg1_BL to z-axis <31.725829> speed <496.141390> / animSpeed; 
			turn leg1_BL to y-axis <55.138123> speed <275.139349> / animSpeed; 
			turn leg1_BR to z-axis <-47.934691> speed <65.703722> / animSpeed; 
			turn leg1_BR to y-axis <-24.629135> speed <252.900680> / animSpeed; 
			turn leg1_FL to z-axis <45.659039> speed <358.618229> / animSpeed; 
			turn leg1_FL to y-axis <-57.706294> speed <162.356807> / animSpeed; 
			turn leg1_FR to z-axis <-30.493759> speed <299.309203> / animSpeed; 
			turn leg1_FR to y-axis <35.100380> speed <571.898091> / animSpeed; 
			turn leg2_BL to z-axis <-81.288021> speed <1348.958297> / animSpeed; 
			turn leg2_BR to z-axis <79.051114> speed <253.773425> / animSpeed; 
			turn leg2_FL to z-axis <-74.704955> speed <594.650510> / animSpeed; 
			turn leg2_FR to z-axis <78.230630> speed <473.019014> / animSpeed; 
			move pelvis to x-axis [-1.319649] speed [12.458496] / animSpeed; 
			move pelvis to z-axis [-0.332076] speed [36.420221] / animSpeed; 
			move pelvis to y-axis [0.446760] speed [14.233704] / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:24
			turn foot_BL to z-axis <61.024455> speed <343.797094> / animSpeed; 
			turn foot_BR to z-axis <-27.107955> speed <122.006884> / animSpeed; 
			turn foot_FL to z-axis <30.645242> speed <46.512974> / animSpeed; 
			turn foot_FR to z-axis <-30.138640> speed <528.016209> / animSpeed; 
			turn leg1_BL to z-axis <42.351910> speed <318.782414> / animSpeed; 
			turn leg1_BL to y-axis <34.474547> speed <619.907286> / animSpeed; 
			turn leg1_BR to z-axis <-47.439147> speed <14.866317> / animSpeed; 
			turn leg1_BR to y-axis <-33.108072> speed <254.368112> / animSpeed; 
			turn leg1_FL to z-axis <51.614128> speed <178.652648> / animSpeed; 
			turn leg1_FL to y-axis <-46.454657> speed <337.549110> / animSpeed; 
			turn leg1_FR to z-axis <-20.341980> speed <304.553354> / animSpeed; 
			turn leg1_FR to y-axis <51.984969> speed <506.537689> / animSpeed; 
			turn leg2_BL to z-axis <-103.373930> speed <662.577254> / animSpeed; 
			turn leg2_BR to z-axis <74.546454> speed <135.139801> / animSpeed; 
			turn leg2_FL to z-axis <-82.258454> speed <226.604981> / animSpeed; 
			turn leg2_FR to z-axis <50.479435> speed <832.535856> / animSpeed; 
			move pelvis to x-axis [-0.129200] speed [35.713463] / animSpeed; 
			move pelvis to z-axis [-1.160446] speed [24.851103] / animSpeed; 
			move pelvis to y-axis [0.710300] speed [7.906208] / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:28
			turn foot_BL to z-axis <54.616330> speed <192.243734> / animSpeed; 
			turn foot_BR to z-axis <-16.487694> speed <318.607834> / animSpeed; 
			turn foot_FL to z-axis <36.079108> speed <163.015988> / animSpeed; 
			turn foot_FR to z-axis <-13.503334> speed <499.059170> / animSpeed; 
			turn leg1_BL to z-axis <46.504347> speed <124.573122> / animSpeed; 
			turn leg1_BL to y-axis <16.209045> speed <547.965057> / animSpeed; 
			turn leg1_BR to z-axis <-34.458533> speed <389.418420> / animSpeed; 
			turn leg1_BR to y-axis <-46.471221> speed <400.894470> / animSpeed; 
			turn leg1_FL to z-axis <55.791120> speed <125.309758> / animSpeed; 
			turn leg1_FL to y-axis <-22.618214> speed <715.093298> / animSpeed; 
			turn leg1_FR to z-axis <-12.635818> speed <231.184854> / animSpeed; 
			turn leg1_FR to y-axis <61.798630> speed <294.409806> / animSpeed; 
			turn leg2_BL to z-axis <-101.057949> speed <69.479416> / animSpeed; 
			turn leg2_BR to z-axis <50.911264> speed <709.055701> / animSpeed; 
			turn leg2_FL to z-axis <-91.636079> speed <281.328730> / animSpeed; 
			turn leg2_FR to z-axis <26.137203> speed <730.266973> / animSpeed; 
			move pelvis to x-axis [1.188236] speed [39.523083] / animSpeed; 
			move pelvis to z-axis [-0.332076] speed [24.851103] / animSpeed; 
			move pelvis to y-axis [0.446760] speed [7.906208] / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (isMoving) { //Frame:32
			turn foot_BL to z-axis <37.710113> speed <507.186523> / animSpeed; 
			turn foot_BR to z-axis <-20.865924> speed <131.346894> / animSpeed; 
			turn foot_FL to z-axis <53.428246> speed <520.474143> / animSpeed; 
			turn foot_FR to z-axis <-21.073379> speed <227.101340> / animSpeed; 
			turn leg1_BL to z-axis <49.810500> speed <99.184592> / animSpeed; 
			turn leg1_BL to y-axis <20.414124> speed <126.152382> / animSpeed; 
			turn leg1_BR to z-axis <-15.214272> speed <577.327836> / animSpeed; 
			turn leg1_BR to y-axis <-62.904376> speed <492.994653> / animSpeed; 
			turn leg1_FL to z-axis <40.645281> speed <454.375158> / animSpeed; 
			turn leg1_FL to y-axis <-15.986526> speed <198.950655> / animSpeed; 
			turn leg1_FR to z-axis <-33.273140> speed <619.119654> / animSpeed; 
			turn leg1_FR to y-axis <62.906835> speed <33.246151> / animSpeed; 
			turn leg2_BL to z-axis <-87.332964> speed <411.749553> / animSpeed; 
			turn leg2_BR to z-axis <35.986122> speed <447.754246> / animSpeed; 
			turn leg2_FL to z-axis <-94.030408> speed <71.829889> / animSpeed; 
			turn leg2_FR to z-axis <54.303412> speed <844.986283> / animSpeed; 
			move pelvis to x-axis [1.723877] speed [16.069225] / animSpeed; 
			move pelvis to z-axis [0.881931] speed [36.420221] / animSpeed; 
			move pelvis to y-axis [-0.027697] speed [14.233704] / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
	}
}

// Call this from StopMoving()!
StopWalking() {
	set-signal-mask SIGNAL_MOVE;

	animSpeed = 10; // tune restore speed here, higher values are slower restore speeds
	
	turn leg1_FR to z-axis <-30> speed <200>;
	turn leg2_FR to z-axis <45> speed <200>;
	turn foot_FR to z-axis <-15> speed <200>;
	
	turn leg1_BL to z-axis <30> speed <200>;
	turn leg2_BL to z-axis <-45> speed <200>;
	turn foot_BL to z-axis <15> speed <200>;
	
	turn leg1_FL to z-axis <30> speed <200>;
	turn leg2_FL to z-axis <-45> speed <200>;
	turn foot_FL to z-axis <15> speed <200>;
	
	turn leg1_BR to z-axis <-30> speed <200>;
	turn leg2_BR to z-axis <45> speed <200>;
	turn foot_BR to z-axis <-15> speed <200>;
	
	sleep (2000);
	
	move pelvis to x-axis [0] speed (([500]*MOVESCALE)/100) / animSpeed;
	move pelvis to y-axis [0] speed (([500]*MOVESCALE)/100) / animSpeed;
	move pelvis to z-axis [0] speed (([500]*MOVESCALE)/100) / animSpeed;
	
	turn leg1_FR to y-axis <45> speed <100>;
	turn leg1_FR to z-axis <0> speed <200>;
	turn leg2_FR to z-axis <45> speed <200>;
	turn foot_FR to z-axis <-45> speed <200>;
	wait-for-turn leg1_FR around y-axis;
	
	turn leg1_FR to z-axis <-30> speed <100>;
	turn leg2_FR to z-axis <45> speed <100>;
	turn foot_FR to z-axis <-15> speed <100>;
	
	turn leg1_BL to y-axis <45> speed <100>;
	turn leg1_BL to z-axis <0> speed <200>;
	turn leg2_BL to z-axis <-45> speed <200>;
	turn foot_BL to z-axis <45> speed <200>;
	wait-for-turn leg1_BL around y-axis;
	
	turn leg1_BL to z-axis <30> speed <100>;
	turn leg2_BL to z-axis <-45> speed <100>;
	turn foot_BL to z-axis <15> speed <100>;
	
	turn leg1_FL to y-axis <-45> speed <100>;
	turn leg1_FL to z-axis <0> speed <200>;
	turn leg2_FL to z-axis <-45> speed <200>;
	turn foot_FL to z-axis <45> speed <200>;
	wait-for-turn leg1_FL around y-axis;
	
	turn leg1_FL to z-axis <30> speed <100>;
	turn leg2_FL to z-axis <-45> speed <100>;
	turn foot_FL to z-axis <15> speed <100>;

	
	turn leg1_BR to y-axis <-45> speed <100>;
	turn leg1_BR to z-axis <-0> speed <200>;
	turn leg2_BR to z-axis <45> speed <200>;
	turn foot_BR to z-axis <-45> speed <200>;
	wait-for-turn leg1_BR around y-axis;
	
	turn leg1_BR to z-axis <-30> speed <100>;
	turn leg2_BR to z-axis <45> speed <100>;
	turn foot_BR to z-axis <-15> speed <100>;
	
}

// REMEMBER TO animspeed = 4 in Create() !!
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = 4; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE){
		animSpeed = (get CURRENT_SPEED);
		if (animSpeed<1) animSpeed=1;
		animSpeed = (maxSpeed * 4) / animSpeed; 
		//get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed); //how to print debug info from bos
		if (animSpeed<3) animSpeed=3;
		if (animspeed>10) animSpeed = 10;
		sleep 131;
	}
}

StartMoving(){
	signal SIGNAL_MOVE;
	set-signal-mask SIGNAL_MOVE;
	isMoving=TRUE;
	start-script UnitSpeed();
	start-script Walk();
}
StopMoving(){
	signal SIGNAL_MOVE;
	isMoving=FALSE;
	call-script StopWalking();
}


Go()
{
	show cagelight_emit;
	
	turn nanogun to x-axis <-15> speed <180>;
	
	sleep(100);
	
	turn arm to x-axis <15> speed <180>;
	
	move cagelight to y-axis [2] speed [20];
	
	sleep 320;
}

Stop()
{
	set INBUILDSTANCE to 0;
	
	hide cagelight_emit;
	
	move cagelight to y-axis [0] speed [20];
	
	turn arm to x-axis <-50> speed <180>;	

	turn nanogun to x-axis <65> speed <180>;
	
	wait-for-turn nanogun around y-axis;
	
	turn torso to y-axis <0.000000> speed <160.000000>;
	
	wait-for-turn torso around y-axis;
}

#define pelvisPIECE pelvis
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 4
#define MAXTILT 100

#include "unit_hitbyweaponid_and_smoke.h"

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState )
		{
			call-script Stop();
			notBuilding = 1;
			currentstate = 1;
		}
		else
		{
			call-script Go();
			notBuilding = 0;
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}


Create()
{
	hide nano;
	hide aimy1;
	hide cagelight_emit;
	isMoving = FALSE;
	nanoNozzle = 0;
	notBuilding = 1;
	animSpeed = 4;
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	
	turn arm to x-axis <-50> speed <2000>;	
	turn nanogun to x-axis <65> speed <2000>;
	
	move pelvis to x-axis [0] speed <2000>;
	move pelvis to y-axis [0] speed <2000>;
	move pelvis to z-axis [0] speed <2000>;
	
	turn leg1_FR to y-axis <45> speed <2000>;
	turn leg1_FR to z-axis <-30> speed <2000>;
	turn leg2_FR to z-axis <45> speed <2000>;
	turn foot_FR to z-axis <-15> speed <2000>;
	
	turn leg1_BL to y-axis <45> speed <2000>;
	turn leg1_BL to z-axis <30> speed <2000>;
	turn leg2_BL to z-axis <-45> speed <2000>;
	turn foot_BL to z-axis <15> speed <2000>;
	
	turn leg1_FL to y-axis <-45> speed <2000>;
	turn leg1_FL to z-axis <30> speed <2000>;
	turn leg2_FL to z-axis <-45> speed <2000>;
	turn foot_FL to z-axis <15> speed <2000>;

	turn leg1_BR to y-axis <-45> speed <2000>;
	turn leg1_BR to z-axis <-30> speed <2000>;
	turn leg2_BR to z-axis <45> speed <2000>;
	turn foot_BR to z-axis <-15> speed <2000>;
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(torsoing, pitch)
{
	show nano;
	turn aimy1 to y-axis torsoing speed <160>;
	start-script RequestState(0);
	while( notBuilding ) sleep 100;
	signal SIG_BUILD;
	wait-for-turn aimy1 around y-axis;
	set INBUILDSTANCE to 1;
	show cagelight_emit;
	spin cagelight_emit around y-axis speed <450>;
}

StopBuilding()
{
	hide nano;
	signal SIG_BUILD;	
	set-signal-mask SIG_BUILD;
	hide cagelight_emit;
	sleep 6000;
	set-signal-mask 0;
	signal SIG_BUILD;	
	
	turn aimy1 to y-axis <0> speed <160.000000>;
	start-script RequestState(1);
}


QueryNanoPiece(piecenum)
{
	piecenum = nano;
}

/*
Targettorsoing(Func_Var_1)
{
	Static_Var_1 = 0 - Func_Var_1;
}
*/

SweetSpot(piecenum)
{
	piecenum = torso;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode pelvis type BITMAPONLY | NOHEATCLOUD;
		explode foot_FL type BITMAPONLY | NOHEATCLOUD;
		explode foot_FR type BITMAPONLY | NOHEATCLOUD;
		explode foot_BL type BITMAPONLY | NOHEATCLOUD;
		explode foot_BR type BITMAPONLY | NOHEATCLOUD;
		explode nanogun type BITMAPONLY | NOHEATCLOUD;
		explode torso type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode pelvis type FALL | NOHEATCLOUD;
		explode foot_FL type FALL | NOHEATCLOUD;
		explode foot_BL type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode foot_BR type FALL | NOHEATCLOUD;
		explode torso type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode pelvis type SMOKE | FALL | NOHEATCLOUD;
		explode foot_FL type SMOKE | FALL | NOHEATCLOUD;
		explode foot_BL type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode foot_BR type SMOKE | FALL | NOHEATCLOUD;
		explode torso type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode pelvis type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode foot_FL type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode foot_BL type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode foot_FR type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode foot_BR type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode leg1_FL type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode leg1_BL type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode leg1_FR type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode leg1_BR type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		
		explode shell type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode torso type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nanogun type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;

	return corpsetype;
}
